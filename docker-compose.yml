version: '3'

services:

  apiapp:
    image: 'api_app'
    build:
      context: ./ApiExchangeApp/
      dockerfile: Dockerfile
    container_name: Api-App
    depends_on:
      - botapp
    restart: always
    ports:
      - 8080:8080
    environment:
      - BOT_APP_HOST=botapp

  botapp:
    image: 'bot_app'
    build:
      context: ./BotApp/
      dockerfile: Dockerfile
    container_name: Bot-App
    depends_on:
      - db
    restart: always
    ports:
      - 8081:8081
    environment:
      - API_APP_HOST=apiapp
      - DATABASE_HOST=db

  db:
    image: postgres
    container_name: cryptobot-db
    restart: always
    environment:
      - POSTGRES_PASSWORD=nickolay
      - POSTGRES_USER=nickolay
      - POSTGRES_DB=nickolay
    ports:
      - 5432:5432

  grafana:
    build: './metrics_config/grafana'
    ports:
      - 3000:3000
    volumes:
      - ./grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      monitoring:
        aliases:
          - grafana
    depends_on:
      - botapp

  prometheus:
    image: prom/prometheus
    ports:
      - 9090:9090
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus:/prometheus
    networks:
      monitoring:
        aliases:
          - prometheus
    depends_on:
      - botapp

networks:
  monitoring: